{
    "test_queries": [
        "SELECT count(*) FROM singer",
        "SELECT count(*) FROM singer",
        "SELECT name ,  country ,  age FROM singer ORDER BY age DESC",
        "SELECT name ,  country ,  age FROM singer ORDER BY age DESC",
        "SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'",
        "SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'",
        "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1",
        "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1",
        "SELECT DISTINCT country FROM singer WHERE age  >  20",
        "SELECT DISTINCT country FROM singer WHERE age  >  20",
        "SELECT country ,  count(*) FROM singer GROUP BY country",
        "SELECT country ,  count(*) FROM singer GROUP BY country",
        "SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)",
        "SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)",
        "SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",
        "SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",
        "select max(capacity), average from stadium",
        "select avg(capacity) ,  max(capacity) from stadium",
        "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1",
        "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1",
        "SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015",
        "SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015",
        "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id",
        "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id",
        "SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1",
        "select t2.name ,  t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.year  >  2013 group by t2.stadium_id order by count(*) desc limit 1",
        "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
        "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
        "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)",
        "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)",
        "SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30",
        "SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014",
        "SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014",
        "SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id",
        "select t2.concert_name ,  t2.theme ,  count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id  =  t2.concert_id group by t2.concert_id",
        "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id",
        "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id",
        "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014",
        "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014",
        "SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'",
        "SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'",
        "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015",
        "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015",
        "select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)",
        "select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)",
        "SELECT count(*) FROM pets WHERE weight  >  10",
        "SELECT count(*) FROM pets WHERE weight  >  10",
        "SELECT weight FROM pets ORDER BY pet_age LIMIT 1",
        "SELECT weight FROM pets ORDER BY pet_age LIMIT 1",
        "SELECT max(weight) ,  petType FROM pets GROUP BY petType",
        "SELECT max(weight) ,  petType FROM pets GROUP BY petType",
        "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20",
        "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20",
        "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'",
        "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'",
        "SELECT count(DISTINCT pettype) FROM pets",
        "SELECT count(DISTINCT pettype) FROM pets",
        "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'",
        "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'",
        "select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'dog'",
        "SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'",
        "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
        "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
        "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'",
        "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'",
        "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
        "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
        "SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1",
        "SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1",
        "SELECT petid ,  weight FROM pets WHERE pet_age  >  1",
        "SELECT petid ,  weight FROM pets WHERE pet_age  >  1",
        "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype",
        "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype",
        "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype",
        "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype",
        "SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid",
        "SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid",
        "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'",
        "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'",
        "SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid",
        "select count(*) ,  t1.stuid from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid",
        "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1",
        "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1",
        "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'",
        "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'",
        "select avg(age) from student where stuid not in (select stuid from has_pet)",
        "select avg(age) from student where stuid not in (select stuid from has_pet)",
        "SELECT count(*) FROM CONTINENTS;",
        "SELECT count(*) FROM CONTINENTS;",
        "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;",
        "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;",
        "SELECT count(*) FROM COUNTRIES;",
        "SELECT count(*) FROM COUNTRIES;",
        "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;",
        "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;",
        "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;",
        "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;",
        "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)",
        "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)",
        "SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';",
        "SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';",
        "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);",
        "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);",
        "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;",
        "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;",
        "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;",
        "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;",
        "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;",
        "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;",
        "select count(*) ,  t2.fullname from model_list as t1 join car_makers as t2 on t1.maker  =  t2.id group by t2.id;",
        "SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;",
        "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';",
        "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';",
        "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';",
        "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';",
        "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';",
        "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';",
        "SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;",
        "SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;",
        "select min(weight) from cars_data where cylinders  =  8 and year  =  1974",
        "select min(weight) from cars_data where cylinders  =  8 and year  =  1974",
        "SELECT Maker ,  Model FROM MODEL_LIST;",
        "SELECT Maker ,  Model FROM MODEL_LIST;",
        "SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;",
        "SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;",
        "SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;",
        "SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;",
        "SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;",
        "SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;",
        "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;",
        "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;",
        "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;",
        "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;",
        "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;",
        "select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id order by t2.mpg desc limit 1;",
        "SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;",
        "select avg(horsepower) from cars_data where year  <  1980;",
        "SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';",
        "SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';",
        "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;",
        "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;",
        "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;",
        "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;",
        "SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;",
        "SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;",
        "SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;",
        "SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;",
        "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';",
        "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';",
        "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;",
        "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;",
        "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;",
        "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;",
        "select distinct year from cars_data where weight between 3000 and 4000;",
        "select distinct year from cars_data where weight between 3000 and 4000;",
        "SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;",
        "SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;",
        "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;",
        "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;",
        "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );",
        "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );",
        "select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2",
        "select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2",
        "SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;",
        "SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;",
        "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;",
        "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;",
        "SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;",
        "select t2.makeid ,  t2.make from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.horsepower  >  (select min(horsepower) from cars_data) and t1.cylinders  <  4;",
        "select max(mpg) from cars_data where cylinders  =  8 or year  <  1980",
        "select max(mpg) from cars_data where cylinders  =  8 or year  <  1980",
        "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';",
        "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';",
        "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;",
        "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;",
        "select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id having count(*)  >=  2 intersect select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker join car_names as t3 on t2.model  =  t3.model group by t1.id having count(*)  >  3;",
        "SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;",
        "SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';",
        "select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  3 union select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country join model_list as t3 on t2.id  =  t3.maker where t3.model  =  'fiat';",
        "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
        "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
        "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
        "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
        "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"",
        "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"",
        "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"",
        "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"",
        "SELECT count(*) FROM AIRLINES",
        "SELECT count(*) FROM AIRLINES",
        "SELECT count(*) FROM AIRPORTS",
        "SELECT count(*) FROM AIRPORTS",
        "SELECT count(*) FROM FLIGHTS",
        "SELECT count(*) FROM FLIGHTS",
        "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"",
        "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"",
        "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"",
        "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"",
        "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"",
        "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"",
        "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\"",
        "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\"",
        "SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"",
        "SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"",
        "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
        "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
        "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"",
        "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"",
        "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
        "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
        "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
        "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
        "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"",
        "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"",
        "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"",
        "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"",
        "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"",
        "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"",
        "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"",
        "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"",
        "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\"",
        "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\"",
        "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
        "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
        "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
        "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
        "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1",
        "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1",
        "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1",
        "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1",
        "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1",
        "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1",
        "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1",
        "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1",
        "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"",
        "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"",
        "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"",
        "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"",
        "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"",
        "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"",
        "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"",
        "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"",
        "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10",
        "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10",
        "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200",
        "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200",
        "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"",
        "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"",
        "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
        "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
        "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"",
        "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"",
        "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
        "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
        "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
        "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
        "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\"",
        "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\"",
        "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)",
        "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)",
        "SELECT count(*) FROM employee",
        "SELECT count(*) FROM employee",
        "SELECT name FROM employee ORDER BY age",
        "SELECT name FROM employee ORDER BY age",
        "SELECT count(*) ,  city FROM employee GROUP BY city",
        "SELECT count(*) ,  city FROM employee GROUP BY city",
        "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1",
        "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1",
        "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION",
        "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION",
        "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1",
        "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1",
        "SELECT min(Number_products) ,  max(Number_products) FROM shop",
        "SELECT min(Number_products) ,  max(Number_products) FROM shop",
        "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC",
        "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC",
        "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)",
        "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)",
        "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1",
        "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1",
        "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1",
        "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1",
        "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)",
        "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)",
        "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1",
        "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1",
        "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)",
        "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)",
        "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name",
        "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name",
        "SELECT sum(bonus) FROM evaluation",
        "SELECT sum(bonus) FROM evaluation",
        "SELECT * FROM hiring",
        "SELECT * FROM hiring",
        "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000",
        "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000",
        "SELECT count(DISTINCT LOCATION) FROM shop",
        "SELECT count(DISTINCT LOCATION) FROM shop",
        "SELECT count(*) FROM Documents",
        "SELECT count(*) FROM Documents",
        "SELECT document_id ,  document_name ,  document_description FROM Documents",
        "SELECT document_id ,  document_name ,  document_description FROM Documents",
        "SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\"",
        "SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\"",
        "SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\"",
        "SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\"",
        "SELECT count(DISTINCT template_id) FROM Documents",
        "SELECT count(DISTINCT template_id) FROM Documents",
        "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'",
        "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'",
        "SELECT template_id ,  count(*) FROM Documents GROUP BY template_id",
        "SELECT template_id ,  count(*) FROM Documents GROUP BY template_id",
        "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1",
        "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1",
        "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1",
        "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1",
        "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents",
        "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents",
        "SELECT count(*) FROM Templates",
        "SELECT count(*) FROM Templates",
        "SELECT template_id ,  version_number ,  template_type_code FROM Templates",
        "SELECT template_id ,  version_number ,  template_type_code FROM Templates",
        "SELECT DISTINCT template_type_code FROM Templates",
        "SELECT DISTINCT template_type_code FROM Templates",
        "SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\"",
        "SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\"",
        "SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\"",
        "SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\"",
        "SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5",
        "SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5",
        "SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code",
        "SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code",
        "SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1",
        "SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1",
        "SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3",
        "SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3",
        "SELECT min(Version_Number) ,  template_type_code FROM Templates",
        "SELECT min(Version_Number) ,  template_type_code FROM Templates",
        "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Data base\"",
        "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Data base\"",
        "SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\"",
        "SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\"",
        "SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code",
        "SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code",
        "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1",
        "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1",
        "SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id",
        "SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id",
        "SELECT template_type_code ,  template_type_description FROM Ref_template_types",
        "SELECT template_type_code ,  template_type_description FROM Ref_template_types",
        "SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\"",
        "SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\"",
        "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Book\"",
        "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Book\"",
        "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID",
        "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID",
        "SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Presentation\"",
        "SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Presentation\"",
        "SELECT count(*) FROM Paragraphs",
        "SELECT count(*) FROM Paragraphs",
        "SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'",
        "SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'",
        "select other_details from paragraphs where paragraph_text like 'korea'",
        "select other_details from paragraphs where paragraph_text like 'korea'",
        "SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'",
        "SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'",
        "SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Customer reviews\"",
        "SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Customer reviews\"",
        "SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id",
        "SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id",
        "SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id",
        "SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id",
        "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2",
        "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2",
        "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1",
        "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1",
        "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1",
        "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1",
        "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2",
        "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2",
        "SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'",
        "SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'",
        "SELECT count(*) FROM teacher",
        "SELECT count(*) FROM teacher",
        "SELECT Name FROM teacher ORDER BY Age ASC",
        "SELECT Name FROM teacher ORDER BY Age ASC",
        "SELECT Age ,  Hometown FROM teacher",
        "SELECT Age ,  Hometown FROM teacher",
        "select name from teacher where hometown != \"little lever urban district\"",
        "select name from teacher where hometown != \"little lever urban district\"",
        "SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33",
        "SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33",
        "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1",
        "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1",
        "SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown",
        "SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown",
        "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1",
        "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1",
        "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2",
        "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2",
        "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID",
        "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID",
        "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name",
        "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name",
        "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Math\"",
        "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Math\"",
        "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name",
        "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name",
        "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2",
        "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2",
        "SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)",
        "SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)",
        "SELECT count(*) FROM visitor WHERE age  <  30",
        "SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC",
        "SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4",
        "SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC",
        "SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1",
        "SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009",
        "SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum'",
        "SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010)",
        "SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1",
        "SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1",
        "SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1",
        "SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit)",
        "SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1",
        "SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit",
        "SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1",
        "SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011",
        "SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010)",
        "SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008",
        "SELECT count(*) FROM players",
        "SELECT count(*) FROM players",
        "SELECT count(*) FROM matches",
        "SELECT count(*) FROM matches",
        "SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'",
        "SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'",
        "SELECT avg(loser_age) ,  avg(winner_age) FROM matches",
        "SELECT avg(loser_age) ,  avg(winner_age) FROM matches",
        "SELECT avg(winner_rank) FROM matches",
        "SELECT avg(winner_rank) FROM matches",
        "SELECT min(loser_rank) FROM matches",
        "SELECT min(loser_rank) FROM matches",
        "SELECT count(DISTINCT country_code) FROM players",
        "SELECT count(DISTINCT country_code) FROM players",
        "SELECT count(DISTINCT loser_name) FROM matches",
        "SELECT count(DISTINCT loser_name) FROM matches",
        "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10",
        "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10",
        "SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016",
        "SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016",
        "SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016",
        "SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016",
        "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'",
        "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'",
        "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1",
        "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1",
        "SELECT first_name ,  last_name FROM players ORDER BY birth_date",
        "SELECT first_name ,  last_name FROM players ORDER BY birth_date",
        "SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date",
        "SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date",
        "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1",
        "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1",
        "SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
        "SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
        "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1",
        "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1",
        "SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1",
        "SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1",
        "SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1",
        "SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1",
        "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
        "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
        "SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
        "SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
        "SELECT count(*) ,  country_code FROM players GROUP BY country_code",
        "SELECT count(*) ,  country_code FROM players GROUP BY country_code",
        "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1",
        "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1",
        "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50",
        "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50",
        "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date",
        "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date",
        "SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR",
        "SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR",
        "SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3",
        "SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3",
        "SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'",
        "SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'",
        "SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1",
        "SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1",
        "SELECT count(*) ,  hand FROM players GROUP BY hand",
        "SELECT count(*) ,  hand FROM players GROUP BY hand",
        "SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured'",
        "SELECT name ,  tonnage FROM ship ORDER BY name DESC",
        "SELECT name ,  date FROM battle",
        "SELECT max(killed) ,  min(killed) FROM death",
        "SELECT avg(injured) FROM death",
        "SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'",
        "SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != 'Boril'",
        "SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'",
        "SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10",
        "SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1",
        "SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I'",
        "SELECT count(DISTINCT RESULT) FROM battle",
        "SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );",
        "SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'",
        "SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'",
        "SELECT note FROM death WHERE note LIKE '%East%'",
        "SELECT line_1 ,  line_2 FROM addresses",
        "SELECT line_1 ,  line_2 FROM addresses",
        "SELECT count(*) FROM Courses",
        "SELECT count(*) FROM Courses",
        "SELECT course_description FROM Courses WHERE course_name  =  'math'",
        "SELECT course_description FROM Courses WHERE course_name  =  'math'",
        "SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'",
        "SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'",
        "SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1",
        "select t2.department_name ,  t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1",
        "SELECT count(DISTINCT department_id) FROM Degree_Programs",
        "SELECT count(DISTINCT department_id) FROM Degree_Programs",
        "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs",
        "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs",
        "SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'",
        "SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'",
        "SELECT section_name ,  section_description FROM Sections",
        "SELECT section_name ,  section_description FROM Sections",
        "SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2",
        "SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2",
        "SELECT section_name FROM Sections ORDER BY section_name DESC",
        "SELECT section_name FROM Sections ORDER BY section_name DESC",
        "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1",
        "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1",
        "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'",
        "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'",
        "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2",
        "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2",
        "SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'",
        "SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'",
        "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1",
        "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1",
        "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1",
        "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1",
        "SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
        "SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
        "SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )",
        "SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )",
        "SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id",
        "SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id",
        "SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1",
        "SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1",
        "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id",
        "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id",
        "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2",
        "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2",
        "SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'",
        "select cell_mobile_number from students where first_name  =  'timmothy' and last_name  =  'ward'",
        "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1",
        "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1",
        "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1",
        "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1",
        "SELECT first_name FROM Students WHERE current_address_id != permanent_address_id",
        "SELECT first_name FROM Students WHERE current_address_id != permanent_address_id",
        "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1",
        "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1",
        "SELECT avg(transcript_date) FROM Transcripts",
        "SELECT avg(transcript_date) FROM Transcripts",
        "SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1",
        "SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1",
        "SELECT count(*) FROM Transcripts",
        "SELECT count(*) FROM Transcripts",
        "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1",
        "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1",
        "SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1",
        "SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1",
        "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1",
        "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1",
        "SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'",
        "SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'",
        "SELECT count(DISTINCT current_address_id) FROM Students",
        "SELECT count(DISTINCT current_address_id) FROM Students",
        "SELECT other_student_details FROM Students ORDER BY other_student_details DESC",
        "SELECT other_student_details FROM Students ORDER BY other_student_details DESC",
        "SELECT section_description FROM Sections WHERE section_name  =  'h'",
        "SELECT section_description FROM Sections WHERE section_name  =  'h'",
        "select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'",
        "select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'",
        "SELECT Title FROM Cartoon ORDER BY title",
        "SELECT Title FROM Cartoon ORDER BY title",
        "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";",
        "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";",
        "SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";",
        "SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";",
        "SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date",
        "SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date",
        "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";",
        "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";",
        "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;",
        "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;",
        "SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;",
        "SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;",
        "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";",
        "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";",
        "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";",
        "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";",
        "SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"English\";",
        "SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"English\";",
        "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;",
        "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;",
        "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE",
        "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE",
        "SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"The Rise of the Blue Beetle!\";",
        "SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"The Rise of the Blue Beetle!\";",
        "SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
        "SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
        "SELECT Episode FROM TV_series ORDER BY rating",
        "SELECT Episode FROM TV_series ORDER BY rating",
        "SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;",
        "SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;",
        "SELECT max(SHARE) , min(SHARE) FROM TV_series;",
        "SELECT max(SHARE) , min(SHARE) FROM TV_series;",
        "SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
        "SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
        "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
        "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
        "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"A Love of a Lifetime\";",
        "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"A Love of a Lifetime\";",
        "SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
        "SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
        "SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by",
        "SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by",
        "select production_code ,  channel from cartoon order by original_air_date desc limit 1",
        "select production_code ,  channel from cartoon order by original_air_date desc limit 1",
        "SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"yes\"",
        "SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"yes\"",
        "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
        "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
        "SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
        "SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
        "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'",
        "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'",
        "SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'",
        "SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'",
        "SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2",
        "SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2",
        "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'",
        "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'",
        "SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')",
        "SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')",
        "SELECT count(*) FROM poker_player",
        "SELECT count(*) FROM poker_player",
        "SELECT Earnings FROM poker_player ORDER BY Earnings DESC",
        "SELECT Earnings FROM poker_player ORDER BY Earnings DESC",
        "SELECT Final_Table_Made ,  Best_Finish FROM poker_player",
        "SELECT Final_Table_Made ,  Best_Finish FROM poker_player",
        "SELECT avg(Earnings) FROM poker_player",
        "SELECT avg(Earnings) FROM poker_player",
        "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1",
        "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1",
        "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000",
        "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000",
        "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID",
        "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID",
        "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000",
        "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000",
        "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made",
        "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made",
        "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1",
        "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1",
        "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1",
        "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1",
        "SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200",
        "SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200",
        "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC",
        "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC",
        "SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality",
        "SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality",
        "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",
        "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",
        "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2",
        "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2",
        "SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC",
        "SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC",
        "SELECT Name FROM people WHERE Nationality != \"Russia\"",
        "SELECT Name FROM people WHERE Nationality != \"Russia\"",
        "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)",
        "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)",
        "SELECT count(DISTINCT Nationality) FROM people",
        "SELECT count(DISTINCT Nationality) FROM people",
        "SELECT count(*) FROM area_code_state",
        "SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC",
        "SELECT vote_id ,  phone_number ,  state FROM votes",
        "SELECT max(area_code) ,  min(area_code) FROM area_code_state",
        "SELECT max(created) FROM votes WHERE state  =  'CA'",
        "SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'",
        "SELECT DISTINCT state ,  created FROM votes",
        "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2",
        "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1",
        "SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA'",
        "SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )",
        "SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1",
        "SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'",
        "SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'",
        "select contestant_name from contestants where contestant_name like \"%al%\"",
        "SELECT Name FROM country WHERE IndepYear  >  1950",
        "SELECT Name FROM country WHERE IndepYear  >  1950",
        "SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republic\"",
        "SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republic\"",
        "SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Caribbean\"",
        "SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Caribbean\"",
        "SELECT Continent FROM country WHERE Name  =  \"Anguilla\"",
        "SELECT Continent FROM country WHERE Name  =  \"Anguilla\"",
        "SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"Kabul\"",
        "SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"Kabul\"",
        "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\" ORDER BY Percentage DESC LIMIT 1",
        "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\" ORDER BY Percentage DESC LIMIT 1",
        "SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazil\"",
        "SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazil\"",
        "SELECT Population ,  Region FROM country WHERE Name  =  \"Angola\"",
        "SELECT Population ,  Region FROM country WHERE Name  =  \"Angola\"",
        "SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Central Africa\"",
        "SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Central Africa\"",
        "SELECT Name FROM country WHERE Continent  =  \"Asia\" ORDER BY LifeExpectancy LIMIT 1",
        "SELECT Name FROM country WHERE Continent  =  \"Asia\" ORDER BY LifeExpectancy LIMIT 1",
        "SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  \"Asia\"",
        "SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  \"Asia\"",
        "SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Africa\" AND GovernmentForm  =  \"Republic\"",
        "SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Africa\" AND GovernmentForm  =  \"Republic\"",
        "SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Asia\" OR Continent  =  \"Europe\"",
        "SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Asia\" OR Continent  =  \"Europe\"",
        "SELECT sum(Population) FROM city WHERE District  =  \"Gelderland\"",
        "SELECT sum(Population) FROM city WHERE District  =  \"Gelderland\"",
        "SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"US Territory\"",
        "SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"US Territory\"",
        "SELECT count(DISTINCT LANGUAGE) FROM countrylanguage",
        "SELECT count(DISTINCT LANGUAGE) FROM countrylanguage",
        "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Africa\"",
        "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Africa\"",
        "SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\"",
        "SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\"",
        "SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Afghanistan\" AND IsOfficial  =  \"T\"",
        "SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Afghanistan\" AND IsOfficial  =  \"T\"",
        "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1",
        "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1",
        "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1",
        "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1",
        "SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\")",
        "SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\")",
        "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\"",
        "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\"",
        "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\" AND T2.IsOfficial  =  \"T\"",
        "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\" AND T2.IsOfficial  =  \"T\"",
        "SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Chinese\"",
        "SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Chinese\"",
        "SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" OR T2.Language  =  \"Dutch\"",
        "SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" OR T2.Language  =  \"Dutch\"",
        "select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  \"english\" and isofficial  =  \"t\" union select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  \"dutch\" and isofficial  =  \"t\"",
        "SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND IsOfficial  =  \"T\" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\" AND IsOfficial  =  \"T\"",
        "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Asia\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1",
        "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Asia\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1",
        "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Republic\" GROUP BY T2.Language HAVING COUNT(*)  =  1",
        "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Republic\" GROUP BY T2.Language HAVING COUNT(*)  =  1",
        "SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"English\" ORDER BY T1.Population DESC LIMIT 1",
        "SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"English\" ORDER BY T1.Population DESC LIMIT 1",
        "SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"Asia\" ORDER BY SurfaceArea DESC LIMIT 1",
        "SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"Asia\" ORDER BY SurfaceArea DESC LIMIT 1",
        "SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\")",
        "SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\")",
        "SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\")",
        "SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\")",
        "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Beatrix\" AND T2.IsOfficial  =  \"T\"",
        "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Beatrix\" AND T2.IsOfficial  =  \"T\"",
        "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\"",
        "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\"",
        "SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"Europe\")",
        "SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"Europe\")",
        "SELECT Name FROM country WHERE Continent  =  \"Africa\"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  \"Asia\")",
        "SELECT Name FROM country WHERE Continent  =  \"Africa\"  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  \"Asia\")",
        "SELECT Name FROM country WHERE Continent  =  \"Asia\"  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  \"Africa\")",
        "SELECT Name FROM country WHERE Continent  =  \"Asia\"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  \"Africa\")",
        "SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"",
        "SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"",
        "SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"English\"",
        "SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"English\"",
        "SELECT Code FROM country WHERE GovernmentForm != \"Republic\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"",
        "SELECT Code FROM country WHERE GovernmentForm != \"Republic\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"",
        "SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')",
        "SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')",
        "select distinct t3.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode join city as t3 on t1.code  =  t3.countrycode where t2.isofficial  =  't' and t2.language  =  'chinese' and t1.continent  =  \"asia\"",
        "SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  \"Asia\"",
        "SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1",
        "SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1",
        "SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1",
        "SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1",
        "SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2",
        "SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2",
        "SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District",
        "SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District",
        "SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72",
        "SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72",
        "SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72",
        "SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72",
        "SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5",
        "SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5",
        "SELECT Name FROM country ORDER BY Population DESC LIMIT 3",
        "SELECT Name FROM country ORDER BY Population DESC LIMIT 3",
        "SELECT Name FROM country ORDER BY Population ASC LIMIT 3",
        "SELECT Name FROM country ORDER BY Population ASC LIMIT 3",
        "SELECT count(*) FROM country WHERE continent  =  \"Asia\"",
        "SELECT count(*) FROM country WHERE continent  =  \"Asia\"",
        "SELECT Name FROM country WHERE continent  =  \"Europe\" AND Population  =  \"80000\"",
        "SELECT Name FROM country WHERE continent  =  \"Europe\" AND Population  =  \"80000\"",
        "select sum(population) ,  avg(surfacearea) from country where continent  =  \"north america\" and surfacearea  >  3000",
        "select sum(population) ,  avg(surfacearea) from country where continent  =  \"north america\" and surfacearea  >  3000",
        "SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000",
        "select name from city where population between 160000 and 900000",
        "SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1",
        "SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1",
        "SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode",
        "SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode",
        "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
        "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
        "SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
        "SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
        "SELECT count(*) FROM conductor",
        "SELECT count(*) FROM conductor",
        "SELECT Name FROM conductor ORDER BY Age ASC",
        "SELECT Name FROM conductor ORDER BY Age ASC",
        "SELECT Name FROM conductor WHERE Nationality != 'USA'",
        "SELECT Name FROM conductor WHERE Nationality != 'USA'",
        "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC",
        "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC",
        "SELECT avg(Attendance) FROM SHOW",
        "SELECT avg(Attendance) FROM SHOW",
        "SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Live final\"",
        "SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Live final\"",
        "SELECT count(DISTINCT Nationality) FROM conductor",
        "SELECT count(DISTINCT Nationality) FROM conductor",
        "SELECT Name FROM conductor ORDER BY Year_of_Work DESC",
        "SELECT Name FROM conductor ORDER BY Year_of_Work DESC",
        "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1",
        "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1",
        "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID",
        "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID",
        "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1",
        "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1",
        "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1",
        "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1",
        "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008",
        "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008",
        "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company",
        "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company",
        "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC",
        "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC",
        "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1",
        "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1",
        "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)",
        "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)",
        "SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003",
        "SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003",
        "SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\"",
        "SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\"",
        "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1",
        "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1",
        "SELECT count(*) FROM Highschooler",
        "SELECT count(*) FROM Highschooler",
        "SELECT name ,  grade FROM Highschooler",
        "SELECT name ,  grade FROM Highschooler",
        "SELECT grade FROM Highschooler",
        "SELECT grade FROM Highschooler",
        "SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"",
        "SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"",
        "SELECT name FROM Highschooler WHERE grade  =  10",
        "SELECT name FROM Highschooler WHERE grade  =  10",
        "SELECT ID FROM Highschooler WHERE name  =  \"Kyle\"",
        "SELECT ID FROM Highschooler WHERE name  =  \"Kyle\"",
        "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10",
        "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10",
        "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade",
        "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade",
        "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1",
        "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1",
        "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4",
        "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4",
        "SELECT student_id ,  count(*) FROM Friend GROUP BY student_id",
        "SELECT student_id ,  count(*) FROM Friend GROUP BY student_id",
        "SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
        "SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
        "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
        "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
        "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3",
        "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3",
        "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\"",
        "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\"",
        "SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
        "SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
        "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend",
        "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend",
        "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id",
        "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id",
        "SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes",
        "SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes",
        "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id",
        "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id",
        "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id",
        "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id",
        "SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
        "SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
        "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
        "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
        "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2",
        "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2",
        "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2",
        "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2",
        "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
        "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
        "SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
        "SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
        "SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
        "SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
        "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals",
        "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals",
        "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )",
        "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )",
        "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2",
        "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2",
        "select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )",
        "select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )",
        "SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs",
        "SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs",
        "SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id",
        "SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id",
        "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
        "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
        "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
        "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
        "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1",
        "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1",
        "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
        "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
        "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1",
        "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1",
        "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1",
        "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1",
        "SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
        "SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
        "SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )",
        "SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )",
        "SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id",
        "SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id",
        "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code",
        "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code",
        "SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
        "SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
        "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
        "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
        "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )",
        "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )",
        "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'",
        "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'",
        "SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id",
        "SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id",
        "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )",
        "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )",
        "SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'",
        "SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'",
        "SELECT date_arrived ,  date_departed FROM Dogs",
        "SELECT date_arrived ,  date_departed FROM Dogs",
        "SELECT count(DISTINCT dog_id) FROM Treatments",
        "SELECT count(DISTINCT dog_id) FROM Treatments",
        "SELECT count(DISTINCT professional_id) FROM Treatments",
        "SELECT count(DISTINCT professional_id) FROM Treatments",
        "SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'",
        "SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'",
        "SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'",
        "SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'",
        "SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )",
        "SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )",
        "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1",
        "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1",
        "SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )",
        "select count(*) from dogs where dog_id not in ( select dog_id from treatments )",
        "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )",
        "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )",
        "SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )",
        "SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )",
        "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1",
        "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1",
        "SELECT avg(age) FROM Dogs",
        "SELECT avg(age) FROM Dogs",
        "SELECT max(age) FROM Dogs",
        "SELECT max(age) FROM Dogs",
        "SELECT charge_type ,  charge_amount FROM Charges",
        "SELECT charge_type ,  charge_amount FROM Charges",
        "SELECT max(charge_amount) FROM Charges",
        "SELECT max(charge_amount) FROM Charges",
        "SELECT email_address ,  cell_number ,  home_phone FROM professionals",
        "SELECT email_address ,  cell_number ,  home_phone FROM professionals",
        "SELECT DISTINCT breed_code ,  size_code FROM dogs",
        "SELECT DISTINCT breed_code ,  size_code FROM dogs",
        "SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code",
        "SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code",
        "SELECT count(*) FROM singer",
        "SELECT count(*) FROM singer",
        "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC",
        "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC",
        "SELECT Birth_Year ,  Citizenship FROM singer",
        "SELECT Birth_Year ,  Citizenship FROM singer",
        "SELECT Name FROM singer WHERE Citizenship != \"France\"",
        "SELECT Name FROM singer WHERE Citizenship != \"France\"",
        "SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949",
        "SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949",
        "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1",
        "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1",
        "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship",
        "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship",
        "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1",
        "select citizenship from singer group by citizenship order by count(*) desc limit 1",
        "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship",
        "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship",
        "SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID",
        "SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID",
        "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000",
        "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000",
        "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1",
        "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1",
        "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name",
        "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name",
        "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)",
        "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)",
        "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955",
        "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955",
        "SELECT count(*) FROM Other_Available_Features",
        "SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  \"AirCon\"",
        "SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code",
        "SELECT property_name FROM Properties WHERE property_type_code  =  \"House\" UNION SELECT property_name FROM Properties WHERE property_type_code  =  \"Apartment\" AND room_count  >  1"
    ],
    "test_questions": [
        "How many singers do we have?",
        "What is the total number of singers?",
        "Show name, country, age for all singers ordered by age from the oldest to the youngest.",
        "What are the names, countries, and ages for every singer in descending order of age?",
        "What is the average, minimum, and maximum age of all singers from France?",
        "What is the average, minimum, and maximum age for all French singers?",
        "Show the name and the release year of the song by the youngest singer.",
        "What are the names and release years for all the songs of the youngest singer?",
        "What are all distinct countries where singers above age 20 are from?",
        "What are  the different countries with singers above age 20?",
        "Show all countries and the number of singers in each country.",
        "How many singers are from each country?",
        "List all song names by singers above the average age.",
        "What are all the song names by singers who are older than average?",
        "Show location and name for all stadiums with a capacity between 5000 and 10000.",
        "What are the locations and names of all stations with capacity between 5000 and 10000?",
        "What is the maximum capacity and the average of all stadiums ?",
        "What is the average and maximum capacities for all stadiums ?",
        "What is the name and capacity for the stadium with highest average attendance?",
        "What is the name and capacity for the stadium with the highest average attendance?",
        "How many concerts are there in year 2014 or 2015?",
        "How many concerts occurred in 2014 or 2015?",
        "Show the stadium name and the number of concerts in each stadium.",
        "For each stadium, how many concerts play there?",
        "Show the stadium name and capacity with most number of concerts in year 2014 or after.",
        "What is the name and capacity of the stadium with the most concerts after 2013 ?",
        "Which year has most number of concerts?",
        "What is the year that had the most concerts?",
        "Show the stadium names without any concert.",
        "What are the names of the stadiums without any concerts?",
        "Show countries where a singer above age 40 and a singer below 30 are from.",
        "Show names for all stadiums except for stadiums having a concert in year 2014.",
        "What are the names of all stadiums that did not have a concert in 2014?",
        "Show the name and theme for all concerts and the number of singers in each concert.",
        "What are the names , themes , and number of singers for every concert ?",
        "List singer names and number of concerts for each singer.",
        "What are the names of the singers and number of concerts for each person?",
        "List all singer names in concerts in year 2014.",
        "What are the names of the singers who performed in a concert in 2014?",
        "what is the name and nation of the singer who have a song having 'Hey' in its name?",
        "What is the name and country of origin of every singer who has a song with the word 'Hey' in its title?",
        "Find the name and location of the stadiums which some concerts happened in the years of both 2014 and 2015.",
        "What are the names and locations of the stadiums that had concerts that occurred in both 2014 and 2015?",
        "Find the number of concerts happened in the stadium with the highest capacity .",
        "What are the number of concerts that occurred in the stadium with the largest capacity ?",
        "Find the number of pets whose weight is heavier than 10.",
        "How many pets have a greater weight than 10?",
        "Find the weight of the youngest dog.",
        "How much does the youngest dog weigh?",
        "Find the maximum weight for each type of pet. List the maximum weight and pet type.",
        "List the maximum weight and type for each type of pet.",
        "Find number of pets owned by students who are older than 20.",
        "How many pets are owned by students that have an age greater than 20?",
        "Find the number of dog pets that are raised by female students (with sex F).",
        "How many dog pets are raised by female students?",
        "Find the number of distinct type of pets.",
        "How many different types of pet are there?",
        "Find the first name of students who have cat or dog pet.",
        "What are the first names of every student who has a cat or dog as a pet?",
        "Find the first name of students who have both cat and dog pets .",
        "What are the students' first names who have both cats and dogs as pets?",
        "Find the major and age of students who do not have a cat pet.",
        "What major is every student who does not own a cat as a pet, and also how old are they?",
        "Find the id of students who do not have a cat pet.",
        "What are the ids of the students who do not own cats as pets?",
        "Find the first name and age of students who have a dog but do not have a cat as a pet.",
        "What is the first name of every student who has a dog but does not have a cat?",
        "Find the type and weight of the youngest pet.",
        "What type of pet is the youngest animal, and how much does it weigh?",
        "Find the id and weight of all pets whose age is older than 1.",
        "What is the id and weight of every pet who is older than 1?",
        "Find the average and maximum age for each type of pet.",
        "What is the average and maximum age for each pet type?",
        "Find the average weight for each pet type.",
        "What is the average weight for each type of pet?",
        "Find the first name and age of students who have a pet.",
        "What are the different first names and ages of the students who do have pets?",
        "Find the id of the pet owned by student whose last name is \u2018Smith\u2019.",
        "What is the id of the pet owned by the student whose last name is 'Smith'?",
        "Find the number of pets for each student who has any pet and student id.",
        "For students who have pets , how many pets does each student have ? list their ids instead of names .",
        "Find the first name and gender of student who have more than one pet.",
        "What is the first name and gender of the all the students who have more than one pet?",
        "Find the last name of the student who has a cat that is age 3.",
        "What is the last name of the student who has a cat that is 3 years old?",
        "Find the average age of students who do not have any pet .",
        "What is the average age for all students who do not own any pets ?",
        "How many continents are there?",
        "What is the number of continents?",
        "How many countries does each continent have? List the continent id, continent name and the number of countries.",
        "For each continent, list its id, name, and how many countries it has?",
        "How many countries are listed?",
        "How many countries exist?",
        "How many models does each car maker produce? List maker full name, id and the number.",
        "What is the full name of each car maker, along with its id and how many models it produces?",
        "Which model of the car has the minimum horsepower?",
        "What is the model of the car with the smallest amount of horsepower?",
        "Find the model of the car whose weight is below the average weight.",
        "What is the model for the car with a weight smaller than the average?",
        "Find the name of the makers that produced some cars in the year of 1970?",
        "What is the name of the different car makers who produced a car in 1970?",
        "Find the make and production time of the cars that were produced in the earliest year?",
        "What is the maker of the carr produced in the earliest year and what year was it?",
        "Which distinct car models are the produced after 1980?",
        "What are the different models for the cards produced after 1980?",
        "How many car makers are there in each continents? List the continent name and the count.",
        "What is the name of each continent and how many car makers are there in each one?",
        "Which of the countries has the most car makers? List the country name.",
        "What is the name of the country with the most car makers?",
        "How many car models are produced by each maker ? Only list the count and the maker full name .",
        "What is the number of car models that are produced by each maker and what is the id and full name of each maker?",
        "What is the accelerate of the car make amc hornet sportabout (sw)?",
        "How much does the car accelerate that makes amc hornet sportabout (sw)?",
        "How many car makers are there in france?",
        "What is the number of makers of care in France?",
        "How many car models are produced in the usa?",
        "What is the count of the car models produced in the United States?",
        "What is the average miles per gallon(mpg) of the cars with 4 cylinders?",
        "What is the average miles per gallon of all the cards with 4 cylinders?",
        "What is the smallest weight of the car produced with 8 cylinders on 1974 ?",
        "What is the minimum weight of the car with 8 cylinders produced in 1974 ?",
        "What are all the makers and models?",
        "What are the makers and models?",
        "What are the countries having at least one car maker? List name and id.",
        "What are the names and ids of all countries with at least one car maker?",
        "What is the number of the cars with horsepower more than 150?",
        "What is the number of cars with a horsepower greater than 150?",
        "What is the average weight of cars each year?",
        "What is the average weight and year for each year?",
        "Which countries in europe have at least 3 car manufacturers?",
        "What are the names of all European countries with at least 3 manufacturers?",
        "What is the maximum horsepower and the make of the car models with 3 cylinders?",
        "What is the largest amount of horsepower for the models with 3 cylinders and what make is it?",
        "Which model saves the most gasoline? That is to say, have the maximum miles per gallon.",
        "What is the car model with the highest mpg ?",
        "What is the average horsepower of the cars before 1980?",
        "What is the average horsepower for all cars produced before 1980 ?",
        "What is the average edispl of the cars of model volvo?",
        "What is the average edispl for all volvos?",
        "What is the maximum accelerate for different number of cylinders?",
        "What is the maximum accelerate for all the different cylinders?",
        "Which model has the most version(make) of cars?",
        "What model has the most different versions?",
        "How many cars have more than 4 cylinders?",
        "What is the number of cars with more than 4 cylinders?",
        "how many cars were produced in 1980?",
        "In 1980, how many cars were made?",
        "How many car models were produced by the maker with full name American Motor Company?",
        "What is the number of car models created by the car maker American Motor Company?",
        "Which makers designed more than 3 car models? List full name and the id.",
        "What are the names and ids of all makers with more than 3 models?",
        "Which distinctive models are produced by maker with the full name General Motors or weighing more than 3500?",
        "What are the different models created by either the car maker General Motors or weighed more than 3500?",
        "In which years cars were produced weighing no less than 3000 and no more than 4000 ?",
        "What are the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000 ?",
        "What is the horsepower of the car with the largest accelerate?",
        "What is the horsepower of the car with the greatest accelerate?",
        "For model volvo, how many cylinders does the car with the least accelerate have?",
        "For a volvo model, how many cylinders does the version with least accelerate have?",
        "How many cars have a larger accelerate than the car with the largest horsepower?",
        "What is the number of cars with a greater accelerate than the one with the most horsepower?",
        "How many countries has more than 2 car makers ?",
        "What is the number of countries with more than 2 car makers ?",
        "How many cars has over 6 cylinders?",
        "What is the number of carsw ith over 6 cylinders?",
        "For the cars with 4 cylinders, which model has the largest horsepower?",
        "For all of the 4 cylinder cars, which model has the most horsepower?",
        "Among the cars with more than lowest horsepower, which ones do not have more than 3 cylinders? List the car makeid and make name.",
        "Among the cars that do not have the minimum horsepower , what are the make ids and names of all those with less than 4 cylinders ?",
        "What is the maximum miles per gallon of the car with 8 cylinders or produced before 1980 ?",
        "What is the maximum mpg of the cars that had 8 cylinders or that were produced before 1980 ?",
        "Which models are lighter than 3500 but not built by the 'Ford Motor Company'?",
        "What are the different models wthat are lighter than 3500 but were not built by the Ford Motor Company?",
        "What are the name of the countries where there is not a single car maker?",
        "What are the names of the countries with no car makers?",
        "Which are the car makers which produce at least 2 models and more than 3 car makers ? List the id and the maker .",
        "What are the ids and makers of all car makers that produce at least 2 models and make more than 3 cars?",
        "What are the id and names of the countries which have more than 3 car makers or produce the 'fiat' model?",
        "What are the ids and names of all countries that either have more than 3 car makers or produce fiat model ?",
        "Which country does Airline \"JetBlue Airways\" belong to?",
        "What country is Jetblue Airways affiliated with?",
        "What is the abbreviation of Airline \"JetBlue Airways\"?",
        "Which abbreviation corresponds to Jetblue Airways?",
        "List all airline names and their abbreviations in \"USA\".",
        "What are the airline names and abbreviations for airlines in the USA?",
        "List the airport code and name in the city of Anthony.",
        "Give the airport code and airport name corresonding to the city Anthony.",
        "How many airlines do we have?",
        "What is the total number of airlines?",
        "How many airports do we have?",
        "Return the number of  airports.",
        "How many flights do we have?",
        "Return the number of flights.",
        "Which airline has abbreviation 'UAL'?",
        "Give the airline with abbreviation 'UAL'.",
        "How many airlines are from USA?",
        "Return the number of airlines in the USA.",
        "Which city and country is the Alton airport at?",
        "Give the city and country for the Alton airport.",
        "What is the airport name for airport 'AKO'?",
        "Return the name of the airport with code 'AKO'.",
        "What are airport names at City 'Aberdeen'?",
        "What are the names of airports in Aberdeen?",
        "How many flights depart from 'APG'?",
        "Count the number of flights departing from 'APG'.",
        "How many flights have destination ATO?",
        "Count the number of flights into ATO.",
        "How many flights depart from City Aberdeen?",
        "Return the number of flights departing from Aberdeen.",
        "How many flights arriving in Aberdeen city?",
        "Return the number of flights arriving in Aberdeen.",
        "How many flights depart from City 'Aberdeen' and have destination City 'Ashley'?",
        "How many flights fly from Aberdeen to Ashley?",
        "How many flights does airline 'JetBlue Airways' have?",
        "Give the number of Jetblue Airways flights.",
        "How many 'United Airlines' flights go to Airport 'ASY'?",
        "Count the number of United Airlines flights arriving in ASY Airport.",
        "How many 'United Airlines' flights depart from Airport 'AHD'?",
        "Return the number of United Airlines flights leaving from AHD Airport.",
        "How many United Airlines flights go to City 'Aberdeen'?",
        "Count the number of United Airlines flights that arrive in Aberdeen.",
        "Which city has most number of arriving flights?",
        "Which city has the most frequent destination airport?",
        "Which city has most number of departing flights?",
        "Which city is the most frequent source airport?",
        "What is the code of airport that has the highest number of flights?",
        "What is the airport code of the airport with the most flights?",
        "What is the code of airport that has fewest number of flights?",
        "Give the code of the airport with the least flights.",
        "Which airline has most number of flights?",
        "What airline serves the most flights?",
        "Find the abbreviation and country of the airline that has fewest number of flights?",
        "What is the abbreviation of the airilne has the fewest flights and what country is it in?",
        "What are airlines that have some flight departing from airport 'AHD'?",
        "Which airlines have a flight with source airport AHD?",
        "What are airlines that have flights arriving at airport 'AHD'?",
        "Which airlines have a flight with destination airport AHD?",
        "Find all airlines that have flights from both airports 'APG' and 'CVO'.",
        "Which airlines have departing flights from both APG and CVO airports?",
        "Find all airlines that have flights from airport 'CVO' but not from 'APG'.",
        "Which airlines have departures from CVO but not from APG airports?",
        "Find all airlines that have at least 10 flights.",
        "Which airlines have at least 10 flights?",
        "Find all airlines that have fewer than 200 flights.",
        "Which airlines have less than 200 flights?",
        "What are flight numbers of Airline \"United Airlines\"?",
        "Which flight numbers correspond to United Airlines flights?",
        "What are flight numbers of flights departing from Airport \"APG\"?",
        "Give the flight numbers of flights leaving from APG.",
        "What are flight numbers of flights arriving at Airport \"APG\"?",
        "Give the flight numbers of flights landing at APG.",
        "What are flight numbers of flights departing from City \"Aberdeen \"?",
        "Give the flight numbers of flights leaving from Aberdeen.",
        "What are flight numbers of flights arriving at City \"Aberdeen\"?",
        "Give the flight numbers of flights arriving in Aberdeen.",
        "Find the number of flights landing in the city of Aberdeen or Abilene.",
        "How many flights land in Aberdeen or Abilene?",
        "Find the name of airports which do not have any flight in and out.",
        "Which airports do not have departing or arriving flights?",
        "How many employees are there?",
        "Count the number of employees",
        "Sort employee names by their age in ascending order.",
        "List the names of employees and sort in ascending order of age.",
        "What is the number of employees from each city?",
        "Count the number of employees for each city.",
        "Which cities do more than one employee under age 30 come from?",
        "Find the cities that have more than one employee under age 30.",
        "Find the number of shops in each location.",
        "How many shops are there in each location?",
        "Find the manager name and district of the shop whose number of products is the largest.",
        "What are the manager name and district of the shop that sells the largest number of products?",
        "find the minimum and maximum number of products of all stores.",
        "What are the minimum and maximum number of products across all the shops?",
        "Return the name, location and district of all shops in descending order of number of products.",
        "Sort all the shops by number products in descending order, and return the name, location and district of each shop.",
        "Find the names of stores whose number products is more than the average number of products.",
        "Which shops' number products is above the average? Give me the shop names.",
        "find the name of employee who was awarded the most times in the evaluation.",
        "Which employee received the most awards in evaluations? Give me the employee name.",
        "Find the name of the employee who got the highest one time bonus.",
        "Which employee received the biggest bonus? Give me the employee name.",
        "Find the names of employees who never won any award in the evaluation.",
        "What are the names of the employees who never received any evaluation?",
        "What is the name of the shop that is hiring the largest number of employees?",
        "Which shop has the most employees? Give me the shop name.",
        "Find the name of the shops that do not hire any employee.",
        "Which shops run with no employees? Find the shop names",
        "Find the number of employees hired in each shop; show the shop name as well.",
        "For each shop, return the number of employees working there and the name of the shop.",
        "What is total bonus given in all evaluations?",
        "Find the total amount of bonus given in all the evaluations.",
        "Give me all the information about hiring.",
        "What is all the information about hiring?",
        "Which district has both stores with less than 3000 products and stores with more than 10000 products?",
        "Find the districts in which there are both shops selling less than 3000 products and shops selling more than 10000 products.",
        "How many different store locations are there?",
        "Count the number of distinct store locations.",
        "How many documents do we have?",
        "Count the number of documents.",
        "List document IDs, document names, and document descriptions for all documents.",
        "What are the ids, names, and descriptions for all documents?",
        "What is the document name and template id for document with description with the letter 'w' in it?",
        "Return the names and template ids for documents that contain the letter w in their description.",
        "What is the document id, template id and description for document named \"Robbin CV\"?",
        "Return the document id, template id, and description for the document with the name Robbin CV.",
        "How many different templates do all document use?",
        "Count the number of different templates used for documents.",
        "How many documents are using the template with type code 'PPT'?",
        "Count the number of documents that use the PPT template type.",
        "Show all template ids and number of documents using each template.",
        "What are all different template ids used for documents, and how many times were each of them used?",
        "What is the id and type code for the template used by the most documents?",
        "Return the id and type code of the template that is used for the greatest number of documents.",
        "Show ids for all templates that are used by more than one document.",
        "What are the template ids of any templates used in more than a single document?",
        "Show ids for all templates not used by any document.",
        "What are the ids for templates that are not used in any documents?",
        "How many templates do we have?",
        "Count the number of templates.",
        "Show template ids, version numbers, and template type codes for all templates.",
        "What are the ids, version numbers, and type codes for each template?",
        "Show all distinct template type codes for all templates.",
        "What are the different template type codes?",
        "What are the ids of templates with template type code PP or PPT?",
        "Return the ids of templates that have the code PP or PPT.",
        "How many templates have template type code CV?",
        "Count the number of templates of the type CV.",
        "What is the version number and template type code for the template with version number later than 5?",
        "Return the version numbers and template type codes of templates with a version number greater than 5.",
        "Show all template type codes and number of templates for each.",
        "What are the different template type codes, and how many templates correspond to each?",
        "Which template type code has most number of templates?",
        "Return the type code of the template type that the most templates belong to.",
        "Show all template type codes with less than three templates.",
        "What are the codes of template types that have fewer than 3 templates?",
        "What the smallest version number and its template type code?",
        "Return the lowest version number, along with its corresponding template type code.",
        "What is the template type code of the template used by document with the name \"Data base\"?",
        "Return the template type code of the template that is used by a document named Data base.",
        "Show all document names using templates with template type code BK.",
        "What are the names of documents that use templates with the code BK?",
        "Show all template type codes and the number of documents using each type.",
        "What are the different template type codes, and how many documents use each type?",
        "Which template type code is used by most number of documents?",
        "Return the code of the template type that is most commonly used in documents.",
        "Show all template type codes that are not used by any document.",
        "What are the codes of template types that are not used for any document?",
        "Show all template type codes and descriptions.",
        "What are the type codes and descriptions for all template types?",
        "What is the template type descriptions for template type code \"AD\".",
        "Return the template type description of the template type with the code AD.",
        "What is the template type code for template type description \"Book\".",
        "Return the type code of the template type with the description \"Book\".",
        "What are the distinct template type descriptions for the templates ever used by any document?",
        "Return the different descriptions for templates that have been used in a document.",
        "What are the template ids with template type description \"Presentation\".",
        "Return the ids corresponding to templates with the description 'Presentation'.",
        "How many paragraphs in total?",
        "Count the number of paragraphs.",
        "How many paragraphs for the document with name 'Summer Show'?",
        "Count the number of paragraphs in the document named 'Summer Show'.",
        "Show paragraph details for paragraph with text 'Korea ' .",
        "What are the details for the paragraph that includes the text 'Korea ' ?",
        "Show all paragraph ids and texts for the document with name 'Welcome to NY'.",
        "What are the ids and texts of paragraphs in the document titled 'Welcome to NY'?",
        "Show all paragraph texts for the document \"Customer reviews\".",
        "What are the paragraph texts for the document with the name 'Customer reviews'?",
        "Show all document ids and the number of paragraphs in each document. Order by document id.",
        "Return the different document ids along with the number of paragraphs corresponding to each, ordered by id.",
        "Show all document ids, names and the number of paragraphs in each document.",
        "What are the ids and names of each document, as well as the number of paragraphs in each?",
        "List all document ids with at least two paragraphs.",
        "What are the ids of documents that have 2 or more paragraphs?",
        "What is the document id and name with greatest number of paragraphs?",
        "Return the id and name of the document with the most paragraphs.",
        "What is the document id with least number of paragraphs?",
        "Return the id of the document with the fewest paragraphs.",
        "What is the document id with 1 to 2 paragraphs?",
        "Give the ids of documents that have between one and two paragraphs.",
        "Show the document id with paragraph text 'Brazil' and 'Ireland'.",
        "What are the ids of documents that contain the paragraph text 'Brazil' and 'Ireland'?",
        "How many teachers are there?",
        "What is the total count of teachers?",
        "List the names of teachers in ascending order of age.",
        "What are the names of the teachers ordered by ascending age?",
        "What are the age and hometown of teachers?",
        "What is the age and hometown of every teacher?",
        "List the name of teachers whose hometown is not `` Little Lever Urban District '' .",
        "What are the names of the teachers whose hometown is not `` Little Lever Urban District '' ?",
        "Show the name of teachers aged either 32 or 33?",
        "What are the names of the teachers who are aged either 32 or 33?",
        "What is the hometown of the youngest teacher?",
        "Where is the youngest teacher from?",
        "Show different hometown of teachers and the number of teachers from each hometown.",
        "For each hometown, how many teachers are there?",
        "List the most common hometown of teachers.",
        "What is the most commmon hometowns for teachers?",
        "Show the hometowns shared by at least two teachers.",
        "What are the towns from which at least two teachers come from?",
        "Show names of teachers and the courses they are arranged to teach.",
        "What is the name of each teacher and what course they teach?",
        "Show names of teachers and the courses they are arranged to teach in ascending alphabetical order of the teacher's name.",
        "What are the names of the teachers and the courses they teach in ascending alphabetical order by the name of the teacher?",
        "Show the name of the teacher for the math course.",
        "What are the names of the people who teach math courses?",
        "Show names of teachers and the number of courses they teach.",
        "What are the names of the teachers and how many courses do they teach?",
        "Show names of teachers that teach at least two courses.",
        "What are the names of the teachers who teach at least two courses?",
        "List the names of teachers who have not been arranged to teach courses.",
        "What are the names of the teachers whose courses have not been arranged?",
        "How many visitors below age 30 are there?",
        "Find the names of the visitors whose membership level is higher than 4, and order the results by the level from high to low.",
        "What is the average age of the visitors whose membership level is not higher than 4?",
        "Find the name and membership level of the visitors whose membership level is higher than 4, and sort by their age from old to young.",
        "Find the id and name of the museum that has the most staff members?",
        "Find the average number of staff working for the museums that were open before 2009.",
        "What are the opening year and staff number of the museum named Plaza Museum?",
        "find the names of museums which have more staff than the minimum staff number of all museums opened after 2010.",
        "find the id, name and age for visitors who visited some museums more than once.",
        "What are the id, name and membership level of visitors who have spent the largest amount of money in total in all museum tickets?",
        "What are the id and name of the museum visited most times?",
        "What is the name of the museum that had no visitor yet?",
        "Find the name and age of the visitor who bought the most tickets at once.",
        "What are the average and maximum number of tickets bought in all visits?",
        "What is the total ticket expense of the visitors whose membership level is 1?",
        "What is the name of the visitor who visited both a museum opened before 2009 and a museum opened after 2011?",
        "Find the number of visitors who did not visit any museum opened after 2010.",
        "How many museums were opened after 2013 or before 2008?",
        "Find the total number of players.",
        "How many players are there?",
        "Find the total number of matches.",
        "Count the number of matches.",
        "List the first name and birth date of all players from the country with code USA.",
        "What are the first names and birth dates of players from the USA?",
        "Find the average age of losers and winners of all matches.",
        "What are the average ages of losers and winners across matches?",
        "Find the average rank of winners in all matches.",
        "What is the average rank for winners in all matches?",
        "Find the highest rank of losers in all matches.",
        "What is the best rank of losers across all matches?",
        "find the number of distinct country codes of all players.",
        "How many distinct countries do players come from?",
        "Find the number of distinct name of losers.",
        "How many different loser names are there?",
        "Find the name of tourney that has more than 10 matches.",
        "What are the names of tournaments that have more than 10 matches?",
        "List the names of all winners who played in both 2013 and 2016.",
        "What are the names of players who won in both 2013 and 2016?",
        "List the number of all matches who played in years of 2013 or 2016.",
        "How many matches were played in 2013 or 2016?",
        "What are the country code and first name of the players who won in both tourney WTA Championships and Australian Open?",
        "What are the first names and country codes for players who won both the WTA Championships and the Australian Open?",
        "Find the first name and country code of the oldest player.",
        "What is the first name and country code of the oldest player?",
        "List the first and last name of all players in the order of birth date.",
        "What are the full names of all players, sorted by birth date?",
        "List the first and last name of all players who are left / L hand in the order of birth date.",
        "What are the full names of all left handed players, in order of birth date?",
        "Find the first name and country code of the player who did the most number of tours.",
        "What is the first name and country code of the player with the most tours?",
        "Find the year that has the most number of matches.",
        "Which year had the most matches?",
        "Find the name and rank points of the winner who won the most times.",
        "What is the name of the winner who has won the most matches, and how many rank points does this player have?",
        "Find the name of the winner who has the highest rank points and participated in the Australian Open tourney.",
        "What is the name of the winner with the most rank points who participated in the Australian Open tournament?",
        "find the names of loser and winner who played in the match with greatest number of minutes.",
        "What are the names of the winner and loser who played in the longest match?",
        "Find the average ranking for each player and their first name.",
        "What are the first names of all players, and their average rankings?",
        "Find the total ranking points for each player and their first name.",
        "What are the first names of all players, and their total ranking points?",
        "find the number of players for each country.",
        "How many players are from each country?",
        "find the code of the country where has the greatest number of players.",
        "What is the code of the country with the most players?",
        "Find the codes of countries that have more than 50 players.",
        "What are the codes of countries with more than 50 players?",
        "Find the total number of tours for each ranking date.",
        "How many total tours were there for each ranking date?",
        "Find the number of matches happened in each year.",
        "How many matches were played in each year?",
        "Find the name and rank of the 3 youngest winners across all matches.",
        "What are the names and ranks of the three youngest winners across all matches?",
        "How many different winners both participated in the WTA Championships and were left handed?",
        "Find the number of left handed winners who participated in the WTA Championships.",
        "Find the first name, country code and birth date of the winner who has the highest rank points in all matches.",
        "What is the first name, country code, and birth date of the player with the most winner rank points across all matches?",
        "Find the number of players for each hand type.",
        "How many players are there for each hand type?",
        "How many ships ended up being 'Captured'?",
        "List the name and tonnage ordered by in descending alphaetical order for the names.",
        "List the name, date and result of each battle.",
        "What is maximum and minimum death toll caused each time?",
        "What is the average number of injuries caused each time?",
        "What are the death and injury situations caused by the ship with tonnage 't'?",
        "What are the name and results of the battles when the bulgarian commander is not 'Boril'",
        "What are the different ids and names of the battles that lost any 'Brig' type shipes?",
        "What are the ids and names of the battles that led to more than 10 people killed in total.",
        "What is the ship id and name that caused most total injuries?",
        "What are the distinct battle names which are between bulgarian commander 'Kaloyan' and latin commander 'Baldwin I'?",
        "How many different results are there for the battles?",
        "How many battles did not lose any ship with tonnage '225'?",
        "List the name and date the battle that has lost the ship named 'Lettice' and the ship named 'HMS Atalanta'",
        "Show names, results and bulgarian commanders of the battles with no ships lost in the 'English Channel'.",
        "What are the notes of the death events which has substring 'East'?",
        "what are all the addresses including line 1 and line 2?",
        "What is the first and second line for all addresses?",
        "How many courses in total are listed?",
        "How many courses are there?",
        "How is the math course described?",
        "What are the descriptions for all the math courses?",
        "What is the zip code of the address in the city Port Chelsea?",
        "What is the zip code for Port Chelsea?",
        "Which department offers the most number of degrees? List department name and id.",
        "What is the name and id of the department with the most number of degrees ?",
        "How many departments offer any degree?",
        "How many different departments offer degrees?",
        "How many different degree names are offered?",
        "How many different degrees are offered?",
        "How many degrees does the engineering department offer?",
        "How many degrees does the engineering department have?",
        "What are the names and descriptions of all the sections?",
        "What are the names and descriptions for all the sections?",
        "What are the names and id of courses having at most 2 sections?",
        "What are the names and ids of every course with less than 2 sections?",
        "List the section_name in reversed lexicographical order.",
        "What are the names of the sections in reverse alphabetical order?",
        "What is the semester which most student registered in? Show both the name and the id.",
        "For each semester, what is the name and id of the one with the most students registered?",
        "What is the description of the department whose name has the substring the computer?",
        "What is the department description for the one whose name has the word computer?",
        "Who are enrolled in 2 degree programs in one semester? List the first name, middle name and last name and the id.",
        "What are the first, middle, and last names, along with the ids, of all students who enrolled in 2 degree programs in one semester?",
        "Who is enrolled in a Bachelor degree program? List the first name, middle name, last name.",
        "What are the first, middle, and last names for everybody enrolled in a Bachelors program?",
        "Find the kind of program which most number of students are enrolled in?",
        "What is the degree summary name that has the most number of students enrolled?",
        "Find the program which most number of students are enrolled in. List both the id and the summary.",
        "What is the program id and the summary of the degree that has the most students enrolled?",
        "Which student has enrolled for the most times in any program? List the id, first name, middle name, last name, the number of enrollments and student id.",
        "What is the first, middle, and last name, along with the id and number of enrollments, for the student who enrolled the most in any program?",
        "Which semesters do not have any student enrolled? List the semester name.",
        "What is the name of the semester with no students enrolled?",
        "What are all the course names of the courses which ever have students enrolled in?",
        "What are the names of all courses that have some students enrolled?",
        "What's the name of the course with most number of enrollments?",
        "What is the name of the course with the most students enrolled?",
        "Find the last name of the students who currently live in the state of North Carolina but have not registered in any degree program.",
        "What are the last name of the students who live in North Carolina but have not registered in any degree programs?",
        "Show the date and id of the transcript with at least 2 course results.",
        "What is the date and id of the transcript with at least 2 courses listed?",
        "What is the phone number of the man with the first name Timmothy and the last name Ward?",
        "What is the mobile phone number of the student named Timmothy Ward ?",
        "Who is the first student to register? List the first name, middle name and last name.",
        "What is the first, middle, and last name of the first student to register?",
        "Who is the earliest graduate of the school? List the first name, middle name and last name.",
        "What is the first, middle, and last name of the earliest school graduate?",
        "Whose permanent address is different from his or her current address? List his or her first name.",
        "What is the first name of the student whose permanent address is different from his or her current one?",
        "Which address holds the most number of students currently? List the address id and all lines.",
        "What is the id, line 1, and line 2 of the address with the most students?",
        "On average, when were the transcripts printed?",
        "What is the average transcript date?",
        "When is the first transcript released? List the date and details.",
        "What is the earliest date of a transcript release, and what details can you tell me?",
        "How many transcripts are released?",
        "How many transcripts are listed?",
        "What is the last transcript release date?",
        "When was the last transcript released?",
        "How many times at most can a course enrollment result show in different transcripts? Also show the course enrollment id.",
        "What is the maximum number of times that a course shows up in different transcripts and what is that course's enrollment id?",
        "Show the date of the transcript which shows the least number of results, also list the id.",
        "What is the date and id of the transcript with the least number of results?",
        "Find the semester when both Master students and Bachelor students got enrolled in.",
        "What is the id of the semester that had both Masters and Bachelors students enrolled?",
        "How many different addresses do the students currently live?",
        "What are the different addresses that have students living there?",
        "List all the student details in reversed lexicographical order.",
        "What other details can you tell me about students in reverse alphabetical order?",
        "Describe the section h.",
        "What is the description for the section named h?",
        "Find the first name of the students who permanently live in the country Haiti or have the cell phone number 09700166582 .",
        "What are the first names of the students who live in Haiti permanently or have the cell phone number 09700166582 ?",
        "List the title of all cartoons in alphabetical order.",
        "What are the titles of the cartoons sorted alphabetically?",
        "List all cartoon directed by \"Ben Jones\".",
        "What are the names of all cartoons directed by Ben Jones?",
        "How many cartoons were written by \"Joseph Kuhr\"?",
        "What is the number of cartoones written by Joseph Kuhr?",
        "list all cartoon titles and their directors ordered by their air date",
        "What is the name and directors of all the cartoons that are ordered by air date?",
        "List the title of all cartoon directed by \"Ben Jones\" or \"Brandon Vietti\".",
        "What are the titles of all cartoons directed by Ben Jones or Brandon Vietti?",
        "Which country has the most of TV Channels? List the country and number of TV Channels it has.",
        "What is the country with the most number of TV Channels and how many does it have?",
        "List the number of different series names and contents in the TV Channel table.",
        "How many different series and contents are listed in the TV Channel table?",
        "What is the content of TV Channel with serial name \"Sky Radio\"?",
        "What is the content of the series Sky Radio?",
        "What is the Package Option of TV Channel with serial name \"Sky Radio\"?",
        "What are the Package Options of the TV Channels whose series names are Sky Radio?",
        "How many TV Channel using language English?",
        "How many TV Channels use the English language?",
        "List the language used least number of TV Channel. List language and number of TV Channel.",
        "What are the languages used by the least number of TV Channels and how many channels use it?",
        "List each language and the number of TV Channels using it.",
        "For each language, list the number of TV Channels that use it.",
        "What is the TV Channel that shows the cartoon \"The Rise of the Blue Beetle!\"? List the TV Channel's series name.",
        "What is the series name of the TV Channel that shows the cartoon \"The Rise of the Blue Beetle\"?",
        "List the title of all  Cartoons showed on TV Channel with series name \"Sky Radio\".",
        "What is the title of all the cartools that are on the TV Channel with the series name \"Sky Radio\"?",
        "List the Episode of all TV series sorted by rating.",
        "What are all of the episodes ordered by ratings?",
        "List top 3 highest Rating  TV series. List the TV series's Episode and Rating.",
        "What are 3 most highly rated episodes in the TV series table and what were those ratings?",
        "What is minimum and maximum share of TV series?",
        "What is the maximum and minimum share for the TV series?",
        "What is the air date of TV series with Episode \"A Love of a Lifetime\"?",
        "When did the episode \"A Love of a Lifetime\" air?",
        "What is Weekly Rank of TV series with Episode \"A Love of a Lifetime\"?",
        "What is the weekly rank for the episode \"A Love of a Lifetime\"?",
        "What is the TV Channel of TV series with Episode \"A Love of a Lifetime\"? List the TV Channel's series name.",
        "What is the name of the series that has the episode \"A Love of a Lifetime\"?",
        "List the Episode of all  TV series showed on TV Channel with series name \"Sky Radio\".",
        "What is the episode for the TV series named \"Sky Radio\"?",
        "Find the number of cartoons directed by each of the listed directors.",
        "How many cartoons did each director create?",
        "Find the production code and channel of the most recently aired cartoon .",
        "What is the produdction code and channel of the most recent cartoon ?",
        "Find the package choice and series name of the TV channel that has high definition TV.",
        "What are the package options and the name of the series for the TV Channel that supports high definition TV?",
        "which countries' tv channels are playing some cartoon written by Todd Casey?",
        "What are the countries that have cartoons on TV that were written by Todd Casey?",
        "which countries' tv channels are not playing any cartoon written by Todd Casey?",
        "What are the countries that are not playing cartoons written by Todd Casey?",
        "Find the series name and country of the tv channel that is playing some cartoons directed by Ben Jones and Michael Chang?",
        "What is the series name and country of all TV channels that are playing cartoons directed by Ben Jones and cartoons directed by Michael Chang?",
        "find the pixel aspect ratio and nation of the tv channels that do not use English.",
        "What is the pixel aspect ratio and country of origin for all TV channels that do not use English?",
        "find id of the tv channels that from the countries where have more than two tv channels.",
        "What are the ids of all tv channels that have more than 2 TV channels?",
        "find the id of tv channels that do not play any cartoon directed by Ben Jones.",
        "What are the ids of the TV channels that do not have any cartoons directed by Ben Jones?",
        "find the package option of the tv channel that do not have any cartoon directed by Ben Jones.",
        "What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones?",
        "How many poker players are there?",
        "Count the number of poker players.",
        "List the earnings of poker players in descending order.",
        "What are the earnings of poker players, ordered descending by value?",
        "List the final tables made and the best finishes of poker players.",
        "What are the final tables made and best finishes for all poker players?",
        "What is the average earnings of poker players?",
        "Return the average earnings across all poker players.",
        "What is the money rank of the poker player with the highest earnings?",
        "Return the money rank of the player with the greatest earnings.",
        "What is the maximum number of final tables made among poker players with earnings less than 200000?",
        "Return the maximum final tables made across all poker players who have earnings below 200000.",
        "What are the names of poker players?",
        "Return the names of all the poker players.",
        "What are the names of poker players whose earnings is higher than 300000?",
        "Give the names of poker players who have earnings above 300000.",
        "List the names of poker players ordered by the final tables made in ascending order.",
        "What are the names of poker players, ordered ascending by the number of final tables they have made?",
        "What is the birth date of the poker player with the lowest earnings?",
        "Return the birth date of the poker player with the lowest earnings.",
        "What is the money rank of the tallest poker player?",
        "Return the money rank of the poker player with the greatest height.",
        "What is the average earnings of poker players with height higher than 200?",
        "Give average earnings of poker players who are taller than 200.",
        "What are the names of poker players in descending order of earnings?",
        "Return the names of poker players sorted by their earnings descending.",
        "What are different nationalities of people and the corresponding number of people from each nation?",
        "How many people are there of each nationality?",
        "What is the most common nationality of people?",
        "Give the nationality that is most common across all people.",
        "What are the nationalities that are shared by at least two people?",
        "Return the nationalities for which there are two or more people.",
        "List the names and birth dates of people in ascending alphabetical order of name.",
        "What are the names and birth dates of people, ordered by their names in alphabetical order?",
        "Show names of people whose nationality is not \"Russia\".",
        "What are the names of people who are not from Russia?",
        "List the names of people that are not poker players.",
        "What are the names of people who do not play poker?",
        "How many distinct nationalities are there?",
        "Count the number of different nationalities.",
        "How many states are there?",
        "List the contestant numbers and names, ordered by contestant name descending.",
        "List the vote ids, phone numbers and states of all votes.",
        "What are the maximum and minimum values of area codes?",
        "What is last date created of votes from the state 'CA'?",
        "What are the names of the contestants whose names are not 'Jessie Alloway'",
        "What are the distinct states and create time of all votes?",
        "What are the contestant numbers and names of the contestants who had at least two votes?",
        "Of all the contestants who got voted, what is the contestant number and name of the contestant who got least votes?",
        "What are the number of votes from state 'NY' or 'CA'?",
        "How many contestants did not get voted?",
        "What is the area code in which the most voters voted?",
        "What are the create dates, states, and phone numbers of the votes that were for the contestant named 'Tabatha Gehling'?",
        "List the area codes in which voters voted both for the contestant 'Tabatha Gehling' and the contestant 'Kelly Clauss'.",
        "Return the names of the contestants whose names contain the substring 'Al' .",
        "What are the names of all the countries that became independent after 1950?",
        "Give the names of the nations that were founded after 1950.",
        "How many countries have a republic as their form of government?",
        "How many countries have governments that are republics?",
        "What is the total surface area of the countries in the Caribbean region?",
        "How much surface area do the countires in the Carribean cover together?",
        "Which continent is Anguilla in?",
        "What is the continent name which Anguilla belongs to?",
        "Which region is the city Kabul located in?",
        "What region is Kabul in?",
        "Which language is the most popular in Aruba?",
        "What language is predominantly spoken in Aruba?",
        "What are the population and life expectancies in Brazil?",
        "Give me Brazil\u2019s population and life expectancies.",
        "What are the region and population of Angola?",
        "What region does Angola belong to and what is its population?",
        "What is the average expected life expectancy for countries in the region of Central Africa?",
        "How long is the people\u2019s average life expectancy in Central Africa?",
        "What is the name of country that has the shortest life expectancy in Asia?",
        "Give the name of the country in Asia with the lowest life expectancy.",
        "What is the total population and maximum GNP in Asia?",
        "How many people live in Asia, and what is the largest GNP among them?",
        "What is the average life expectancy in African countries that are republics?",
        "Give the average life expectancy for countries in Africa which are republics?",
        "What is the total surface area of the continents Asia and Europe?",
        "Give the total surface area covered by countries in Asia or Europe.",
        "How many people live in Gelderland district?",
        "What is the total population of Gelderland district?",
        "What is the average GNP and total population in all nations whose government is US territory?",
        "Give the mean GNP and total population of nations which are considered US territory.",
        "How many unique languages are spoken in the world?",
        "What is the number of distinct languages used around the world?",
        "How many type of governments are in Africa?",
        "How many different forms of governments are there in Africa?",
        "What is the total number of languages used in Aruba?",
        "How many languages are spoken in Aruba?",
        "How many official languages does Afghanistan have?",
        "How many official languages are spoken in Afghanistan?",
        "What is name of the country that speaks the largest number of languages?",
        "Give the name of the nation that uses the greatest amount of languages.",
        "Which continent has the most diverse languages?",
        "Which continent speaks the most languages?",
        "How many countries speak both English and Dutch?",
        "What is the number of nations that use English and Dutch?",
        "What are the names of nations speak both English and French?",
        "Give the names of nations that speak both English and French.",
        "What are the names of nations where both English and French are official languages?",
        "Give the names of countries with English and French as official languages.",
        "What is the number of distinct continents where Chinese is spoken?",
        "How many continents speak Chinese?",
        "What are the regions that use English or Dutch?",
        "Which regions speak Dutch or English?",
        "What are the countries where either English or Dutch is the official language ?",
        "Which countries have either English or Dutch as an official language?",
        "Which language is the most popular on the Asian continent?",
        "What is the language that is used by the largest number of Asian nations?",
        "Which languages are spoken by only one country in republic governments?",
        "What languages are only used by a single country with a republic government?",
        "Find the city with the largest population that uses English.",
        "What is the most populace city that speaks English?",
        "Find the name, population and expected life length of asian country with the largest area?",
        "What are the name, population, and life expectancy of the largest Asian country by land?",
        "What is average life expectancy in the countries where English is not the official language?",
        "Give the mean life expectancy of countries in which English is not the official language.",
        "What is the total number of people living in the nations that do not use English?",
        "How many people live in countries that do not speak English?",
        "What is the official language spoken in the country whose head of state is Beatrix?",
        "What is the official language used in the country the name of whose head of state is Beatrix.",
        "What is the total number of unique official languages spoken in the countries that are founded before 1930?",
        "For the countries founded before 1930, what is the total number of distinct official languages?",
        "What are the countries that have greater surface area than any country in Europe?",
        "Which countries have greater area than that of any country in Europe?",
        "What are the African countries that have a  population less than any country in Asia?",
        "Which African countries have a smaller population than that of any country in Asia?",
        "Which Asian countries have a population that is larger than any country in Africa?",
        "What are the Asian countries which have a population larger than that of any country in Africa?",
        "What are the country codes for countries that do not speak English?",
        "Return the country codes for countries that do not speak English.",
        "What are the country codes of countries where people use languages other than English?",
        "Give the country codes for countries in which people speak langauges that are not English.",
        "What are the codes of the countries that do not speak English and whose government forms are not Republic?",
        "Return the codes of countries that do not speak English and do not have Republics for governments.",
        "Which cities are in European countries where English is not the official language?",
        "What are the names of cities in Europe for which English is not the official language?",
        "Which unique cities are in Asian countries where Chinese is the official language ?",
        "Return the different names of cities that are in Asia and for which Chinese is the official language.",
        "What are the name, independence year, and surface area of the country with the smallest population?",
        "Give the name, year of independence, and surface area of the country that has the lowest population.",
        "What are the population, name and leader of the country with the largest area?",
        "Give the name, population, and head of state for the country that has the largest area.",
        "Return the country name and the numbers of languages spoken for each country that speaks at least 3 languages.",
        "What are the names of countries that speak more than 2 languages, as well as how many languages they speak?",
        "Find the number of cities in each district whose population is greater than the average population of cities?",
        "How many cities in each district have a population that is above the average population across all cities?",
        "Find the government form name and total population for each government form whose average life expectancy is longer than 72.",
        "What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72?",
        "Find the average life expectancy and total population for each continent where the average life expectancy is shorter than 72?",
        "What are the different continents and the total popuation and average life expectancy corresponding to each, for continents that have an average life expectancy less than 72?",
        "What are the names and areas of countries with the top 5 largest area?",
        "Return the names and surface areas of the 5 largest countries.",
        "What are names of countries with the top 3 largest population?",
        "Return the names of the 3 most populated countries.",
        "What are the names of the nations with the 3 lowest populations?",
        "Return the names of the 3 countries with the fewest people.",
        "how many countries are in Asia?",
        "Count the number of countries in Asia.",
        "What are the names of the countries that are in the continent of Europe and have a population of 80000?",
        "Give the names of countries that are in Europe and have a population equal to 80000.",
        "What is the total population and average area of countries in the continent of North America whose area is bigger than 3000 ?",
        "Give the total population and average surface area corresponding to countries in North America that have a surface area greater than 3000 .",
        "What are the cities whose population is between 160000 and 900000?",
        "Return the names of cities that have a population between 160000 and 900000 .",
        "Which language is spoken by the largest number of countries?",
        "Give the language that is spoken in the most countries.",
        "What is the language spoken by the largest percentage of people in each country?",
        "What are the country codes of the different countries, and what are the languages spoken by the greatest percentage of people for each?",
        "What is the total number of countries where Spanish is spoken by the largest percentage of people?",
        "Count the number of countries for which Spanish is the predominantly spoken language.",
        "What are the codes of countries where Spanish is spoken by the largest percentage of people?",
        "Return the codes of countries for which Spanish is the predominantly spoken language.",
        "How many conductors are there?",
        "Count the number of conductors.",
        "List the names of conductors in ascending order of age.",
        "What are the names of conductors, ordered by age?",
        "What are the names of conductors whose nationalities are not \"USA\"?",
        "Return the names of conductors that do not have the nationality \"USA\".",
        "What are the record companies of orchestras in descending order of years in which they were founded?",
        "Return the record companies of orchestras, sorted descending by the years in which they were founded.",
        "What is the average attendance of shows?",
        "Return the average attendance across all shows.",
        "What are the maximum and minimum share of performances whose type is not \"Live final\".",
        "Return the maximum and minimum shares for performances that do not have the type \"Live final\".",
        "How many different nationalities do conductors have?",
        "Count the number of different nationalities of conductors.",
        "List names of conductors in descending order of years of work.",
        "What are the names of conductors, sorted descending by the number of years they have worked?",
        "List the name of the conductor with the most years of work.",
        "What is the name of the conductor who has worked the greatest number of years?",
        "Show the names of conductors and the orchestras they have conducted.",
        "What are the names of conductors as well as the corresonding orchestras that they have conducted?",
        "Show the names of conductors that have conducted more than one orchestras.",
        "What are the names of conductors who have conducted at more than one orchestra?",
        "Show the name of the conductor that has conducted the most number of orchestras.",
        "What is the name of the conductor who has conducted the most orchestras?",
        "Please show the name of the conductor that has conducted orchestras founded after 2008.",
        "What are the names of conductors who have conducted orchestras founded after the year 2008?",
        "Please show the different record companies and the corresponding number of orchestras.",
        "How many orchestras does each record company manage?",
        "Please show the record formats of orchestras in ascending order of count.",
        "What are the major record formats of orchestras, sorted by their frequency?",
        "List the record company shared by the most number of orchestras.",
        "What is the record company used by the greatest number of orchestras?",
        "List the names of orchestras that have no performance.",
        "What are the orchestras that do not have any performances?",
        "Show the record companies shared by orchestras founded before 2003 and after 2003.",
        "What are the record companies that are used by both orchestras founded before 2003 and those founded after 2003?",
        "Find the number of orchestras whose record format is \"CD\" or \"DVD\".",
        "Count the number of orchestras that have CD or DVD as their record format.",
        "Show the years in which orchestras that have given more than one performance are founded.",
        "What are years of founding for orchestras that have had more than a single performance?",
        "How many high schoolers are there?",
        "Count the number of high schoolers.",
        "Show the names and grades of each high schooler.",
        "What are the names and grades for each high schooler?",
        "Show all the grades of the high schoolers.",
        "What is the grade of each high schooler?",
        "What grade is Kyle in?",
        "Return the grade for the high schooler named Kyle.",
        "Show the names of all high schoolers in grade 10.",
        "What are the names of all high schoolers in grade 10?",
        "Show the ID of the high schooler named Kyle.",
        "What is Kyle's id?",
        "How many high schoolers are there in grade 9 or 10?",
        "Count the number of high schoolers in grades 9 or 10.",
        "Show the number of high schoolers for each grade.",
        "How many high schoolers are in each grade?",
        "Which grade has the most high schoolers?",
        "Return the grade that has the greatest number of high schoolers.",
        "Show me all grades that have at least 4 students.",
        "Which grades have 4 or more high schoolers?",
        "Show the student IDs and numbers of friends corresponding to each.",
        "How many friends does each student have?",
        "Show the names of high school students and their corresponding number of friends.",
        "What are the names of the high schoolers and how many friends does each have?",
        "What is the name of the high schooler who has the greatest number of friends?",
        "Return the name of the high school student with the most friends.",
        "Show the names of high schoolers who have at least 3 friends.",
        "What are the names of high schoolers who have 3 or more friends?",
        "Show the names of all of the high schooler Kyle's friends.",
        "Return the names of friends of the high school student Kyle.",
        "How many friends does the high school student Kyle have?",
        "Count the number of friends Kyle has.",
        "Show ids of all students who do not have any friends.",
        "What are the ids of high school students who do not have friends?",
        "Show names of all high school students who do not have any friends.",
        "What are the names of students who have no friends?",
        "Show the ids of high schoolers who have friends and are also liked by someone else.",
        "What are the ids of students who both have friends and are liked?",
        "Show name of all students who have some friends and also are liked by someone else.",
        "What are the names of high schoolers who both have friends and are liked?",
        "Count the number of likes for each student id.",
        "How many likes correspond to each student id?",
        "Show the names of high schoolers who have likes, and numbers of likes for each.",
        "What are the names of high schoolers who have likes, and how many likes does each have?",
        "What is the name of the high schooler who has the greatest number of likes?",
        "Give the name of the student with the most likes.",
        "Show the names of students who have at least 2 likes.",
        "What are the names of students who have 2 or more likes?",
        "Show the names of students who have a grade higher than 5 and have at least 2 friends.",
        "What are the names of high schoolers who have a grade of over 5 and have 2 or more friends?",
        "How many likes does Kyle have?",
        "Return the number of likes that the high schooler named Kyle has.",
        "Find the average grade of all students who have some friends.",
        "What is the average grade of students who have friends?",
        "Find the minimum grade of students who have no friends.",
        "What is the lowest grade of students who do not have any friends?",
        "Which states have both owners and professionals living there?",
        "Find the states where both owners and professionals live.",
        "What is the average age of the dogs who have gone through any treatments?",
        "Find the average age of the dogs who went through treatments.",
        "Which professionals live in the state of Indiana or have done treatment on more than 2 treatments? List his or her id, last name and cell phone.",
        "Find the id, last name and cell phone of the professionals who live in the state of Indiana or have performed more than two treatments.",
        "Which dogs have not cost their owner more than 1000 for treatment ? List the dog names .",
        "What are the names of the dogs for which the owner has not spend more than 1000 for treatment ?",
        "Which first names are used for professionals or owners but are not used as dog names?",
        "Find the first names that are used for professionals or owners but are not used as dog names.",
        "Which professional did not operate any treatment on dogs? List the professional's id, role and email.",
        "Give me the id, role and email of the professionals who did not perform any treatment on dogs.",
        "Which owner owns the most dogs? List the owner id, first name and last name.",
        "Return the owner id, first name and last name of the owner who has the most dogs.",
        "Which professionals have done at least two treatments? List the professional's id, role, and first name.",
        "What are the id, role, and first name of the professionals who have performed two or more treatments?",
        "What is the name of the breed with the most dogs?",
        "Which breed do the most dogs have? Give me the breed name.",
        "Which owner has paid for the most treatments on his or her dogs? List the owner id and last name.",
        "Tell me the owner id and last name of the owner who spent the most on treatments of his or her dogs.",
        "What is the description of the treatment type that costs the least money in total?",
        "Give me the description of the treatment type whose total cost is the lowest.",
        "Which owner has paid the largest amount of money in total for their dogs? Show the owner id and zip code.",
        "Find the owner id and zip code of the owner who spent the most money in total for his or her dogs.",
        "Which professionals have done at least two types of treatments? List the professional id and cell phone.",
        "Find the id and cell phone of the professionals who operate two or more types of treatments.",
        "What are the first name and last name of the professionals who have done treatment with cost below average?",
        "Which professionals have operated a treatment that costs less than the average? Give me theor first names and last names.",
        "List the date of each treatment, together with the first name of the professional who operated it.",
        "What are the date and the operating professional's first name of each treatment?",
        "List the cost of each treatment and the corresponding treatment type description.",
        "What are the cost and treatment type description of each treatment?",
        "List each owner's first name, last name, and the size of his for her dog.",
        "What are each owner's first name, last name, and the size of their dog?",
        "List pairs of the owner's first name and the dogs's name.",
        "What are each owner's first name and their dogs's name?",
        "List the names of the dogs of the rarest breed and the treatment dates of them.",
        "Which dogs are of the rarest breed? Show their names and treatment dates.",
        "Which dogs are owned by someone who lives in Virginia? List the owner's first name and the dog's name.",
        "Find the first names of owners living in Virginia and the names of dogs they own.",
        "What are the arriving date and the departing date of the dogs who have gone through a treatment?",
        "Find the arriving date and the departing date of the dogs that received a treatment.",
        "List the last name of the owner owning the youngest dog.",
        "Who owns the youngest dog? Give me his or her last name.",
        "List the emails of the professionals who live in the state of Hawaii or the state of Wisconsin.",
        "What are the emails of the professionals living in either the state of Hawaii or the state of Wisconsin?",
        "What are the arriving date and the departing date of all the dogs?",
        "List the arrival date and the departure date for all the dogs.",
        "How many dogs went through any treatments?",
        "Count the number of dogs that went through a treatment.",
        "How many professionals have performed any treatment to dogs?",
        "Find the number of professionals who have ever treated dogs.",
        "Which professionals live in a city containing the substring 'West'? List his or her role, street, city and state.",
        "Find the role, street, city and state of the professionals living in a city that contains the substring 'West'.",
        "Which owners live in the state whose name contains the substring 'North'? List his first name, last name and email.",
        "Return the first name, last name and email of the owners living in a state whose name contains the substring 'North'.",
        "How many dogs have an age below the average?",
        "Count the number of dogs of an age below the average.",
        "How much does the most recent treatment cost?",
        "Show me the cost of the most recently performed treatment.",
        "How many dogs have not gone through any treatment?",
        "Tell me the number of dogs that have not received any treatment .",
        "How many owners temporarily do not have any dogs?",
        "Find the number of owners who do not own any dogs at this moment.",
        "How many professionals did not operate any treatment on dogs?",
        "Find the number of professionals who have not treated any dogs.",
        "List the dog name, age and weight of the dogs who have been abandoned? 1 stands for yes, and 0 stands for no.",
        "What are the dog name, age and weight of the dogs that were abandoned? Note that 1 stands for yes, and 0 stands for no in the tables.",
        "What is the average age of all the dogs?",
        "Compute the average age of all the dogs.",
        "What is the age of the oldest dog?",
        "Tell me the age of the oldest dog.",
        "How much does each charge type costs? List both charge type and amount.",
        "List each charge type and its amount.",
        "How much does the most expensive charge type costs?",
        "What is the charge amount of the most expensive charge type?",
        "List the email, cell phone and home phone of all the professionals.",
        "What are the email, cell phone and home phone of each professional?",
        "What are all the possible breed type and size type combinations?",
        "Find the distinct breed type and size type combinations for dogs.",
        "List the first name of all the professionals along with the description of the treatment they have done.",
        "What are each professional's first name and description of the treatment they have performed?",
        "How many singers are there?",
        "What is the count of singers?",
        "List the name of singers in ascending order of net worth.",
        "What are the names of singers ordered by ascending net worth?",
        "What are the birth year and citizenship of singers?",
        "What are the birth years and citizenships of the singers?",
        "List the name of singers whose citizenship is not \"France\".",
        "What are the names of the singers who are not French citizens?",
        "Show the name of singers whose birth year is either 1948 or 1949?",
        "What are the names of the singers whose birth years are either 1948 or 1949?",
        "What is the name of the singer with the largest net worth?",
        "What is the name of the singer who is worth the most?",
        "Show different citizenship of singers and the number of singers of each citizenship.",
        "For each citizenship, how many singers are from that country?",
        "Please show the most common citizenship of singers.",
        "What is the most common singer citizenship ?",
        "Show different citizenships and the maximum net worth of singers of each citizenship.",
        "For each citizenship, what is the maximum net worth?",
        "Show titles of songs and names of singers.",
        "What are the song titles and singer names?",
        "Show distinct names of singers that have songs with sales more than 300000.",
        "what are the different names of the singers that have sales more than 300000?",
        "Show the names of singers that have more than one song.",
        "What are the names of the singers that have more than one songs?",
        "Show the names of singers and the total sales of their songs.",
        "For each singer name, what is the total sales for their songs?",
        "List the name of singers that do not have any song.",
        "What is the sname of every sing that does not have any song?",
        "Show the citizenship shared by singers with birth year before 1945 and after 1955.",
        "What are the citizenships that are shared by singers with a birth year before 1945 and after 1955?",
        "How many available features are there in total?",
        "What is the feature type name of feature AirCon?",
        "Show the property type descriptions of properties belonging to that code.",
        "What are the names of properties that are either houses or apartments with more than 1 room?"
    ]
}